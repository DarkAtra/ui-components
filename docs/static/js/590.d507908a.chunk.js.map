{"version":3,"file":"static/js/590.d507908a.chunk.js","mappings":"qNAMMA,EAAS,WACb,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GAIvBE,KAAKC,WAAaC,EAAAA,EAAAA,OACnB,CAPY,qCAQb,WACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,6BAA8BC,QAAS,cAAeC,MAAOC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,IAAwBC,EAAAA,EAAAA,GAAiCX,KAAKC,WAAYC,EAAAA,EAAAA,aAAyBC,EAAAA,EAAAA,GAAE,SAAU,CAAES,KAAM,OAAQ,eAAgB,EAAG,iBAAkB,QAASC,GAAI,KAAMC,GAAI,KAAMC,EAAG,QAC5T,KAVY,KAYflB,EAAUU,MAdW,mnD","sources":["../../core/dist/esm/ui-spinner.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-d3d08fab.js';\nimport { g as getValuePerBreakpointAndFillGaps } from './Common-663c63f4.js';\nimport { T as ThemeColor, g as getThemeColorRgbaStyles } from './ThemeColor-67f07c45.js';\n\nconst uiSpinnerCss = \":host{display:contents}:host svg{display:inline-flex;width:1em;height:1em;animation:spinner 1.4s linear infinite;--theme-color-r-xs:0;--theme-color-r-sm:0;--theme-color-r-md:0;--theme-color-r-lg:0;--theme-color-r-xl:0;--theme-color-g-xs:0;--theme-color-g-sm:0;--theme-color-g-md:0;--theme-color-g-lg:0;--theme-color-g-xl:0;--theme-color-b-xs:0;--theme-color-b-sm:0;--theme-color-b-md:0;--theme-color-b-lg:0;--theme-color-b-xl:0;--theme-color-a-xs:1;--theme-color-a-sm:1;--theme-color-a-md:1;--theme-color-a-lg:1;--theme-color-a-xl:1}:host svg>circle{stroke-dasharray:280;stroke-dashoffset:0;transform-origin:center;animation:dash 1.4s ease-in-out infinite;transition:stroke 0.15s ease-in-out;stroke:rgba(var(--theme-color-r-xs), var(--theme-color-g-xs), var(--theme-color-b-xs), var(--theme-color-a-xs))}@media (min-width: 576px){:host svg>circle{stroke:rgba(var(--theme-color-r-sm), var(--theme-color-g-sm), var(--theme-color-b-sm), var(--theme-color-a-sm))}}@media (min-width: 768px){:host svg>circle{stroke:rgba(var(--theme-color-r-md), var(--theme-color-g-md), var(--theme-color-b-md), var(--theme-color-a-md))}}@media (min-width: 992px){:host svg>circle{stroke:rgba(var(--theme-color-r-lg), var(--theme-color-g-lg), var(--theme-color-b-lg), var(--theme-color-a-lg))}}@media (min-width: 1200px){:host svg>circle{stroke:rgba(var(--theme-color-r-xl), var(--theme-color-g-xl), var(--theme-color-b-xl), var(--theme-color-a-xl))}}@keyframes spinner{0%{transform:rotate(0deg)}100%{transform:rotate(270deg)}}@keyframes dash{0%{stroke-dashoffset:280}50%{stroke-dashoffset:70;transform:rotate(135deg)}100%{stroke-dashoffset:280;transform:rotate(450deg)}}\";\n\nconst UiSpinner = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The theme color to be used for this spinner.\n     */\n    this.themeColor = ThemeColor.PRIMARY;\n  }\n  render() {\n    return (h(Host, null, h(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 100 100\", style: Object.assign({}, getThemeColorRgbaStyles(getValuePerBreakpointAndFillGaps(this.themeColor, ThemeColor.PRIMARY))) }, h(\"circle\", { fill: \"none\", \"stroke-width\": 6, \"stroke-linecap\": \"round\", cx: \"50\", cy: \"50\", r: \"47\" }))));\n  }\n};\nUiSpinner.style = uiSpinnerCss;\n\nexport { UiSpinner as ui_spinner };\n"],"names":["UiSpinner","hostRef","registerInstance","this","themeColor","ThemeColor","h","Host","xmlns","viewBox","style","Object","assign","getThemeColorRgbaStyles","getValuePerBreakpointAndFillGaps","fill","cx","cy","r"],"sourceRoot":""}