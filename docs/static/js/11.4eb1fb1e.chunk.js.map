{"version":3,"sources":["../../core/dist/esm/ui-grid.entry.js","../../core/dist/esm/Common-663c63f4.js"],"names":["UiGrid","hostRef","registerInstance","this","inline","dense","gap","columns","h","Host","style","Object","assign","mapKeys","mapValues","getValuePerBreakpointAndFillGaps","v","isFixed","key","withBreakpointSuffix","getBreakpointAwareValue","breakpoint","value","_a","fallback","_b","_c","_d","_e","_valueByBreakpoint","xs","sm","md","lg","xl","getValuePerBreakpoint","prevValue","name","classes","classNames","filter","className","join","o","s","String","isNaN","isFinite","test","obj","mapper","a","entries","reduce","values"],"mappings":"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","file":"static/js/11.4eb1fb1e.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-8f52b46a.js';\nimport { m as mapKeys, w as withBreakpointSuffix, a as mapValues, i as isFixed, g as getValuePerBreakpointAndFillGaps } from './Common-663c63f4.js';\n\nconst uiGridCss = \":host{display:grid;max-width:100%;margin:0;padding:0;line-height:1.5;--grid-inline-xs:grid;--grid-inline-sm:grid;--grid-inline-md:grid;--grid-inline-lg:grid;--grid-inline-xl:grid;--grid-template-columns-xs:none;--grid-template-columns-sm:none;--grid-template-columns-md:none;--grid-template-columns-lg:none;--grid-template-columns-xl:none;--grid-gap-xs:0;--grid-gap-sm:0;--grid-gap-md:0;--grid-gap-lg:0;--grid-gap-xl:0;--grid-dense-xs:row;--grid-dense-sm:row;--grid-dense-md:row;--grid-dense-lg:row;--grid-dense-xl:row;display:var(--grid-inline-xs);grid-template-columns:var(--grid-template-columns-xs);gap:var(--grid-gap-xs);grid-auto-flow:var(--grid-dense-xs)}@media (min-width: 576px){:host{display:var(--grid-inline-sm);grid-template-columns:var(--grid-template-columns-sm);gap:var(--grid-gap-sm);grid-auto-flow:var(--grid-dense-sm)}}@media (min-width: 768px){:host{display:var(--grid-inline-md);grid-template-columns:var(--grid-template-columns-md);gap:var(--grid-gap-md);grid-auto-flow:var(--grid-dense-md)}}@media (min-width: 992px){:host{display:var(--grid-inline-lg);grid-template-columns:var(--grid-template-columns-lg);gap:var(--grid-gap-lg);grid-auto-flow:var(--grid-dense-lg)}}@media (min-width: 1200px){:host{display:var(--grid-inline-xl);grid-template-columns:var(--grid-template-columns-xl);gap:var(--grid-gap-xl);grid-auto-flow:var(--grid-dense-xl)}}:host>::slotted(ui-grid-item){display:flex;width:auto;max-width:100%;margin:0;line-height:inherit;--grid-column-xs:auto;--grid-column-sm:auto;--grid-column-md:auto;--grid-column-lg:auto;--grid-column-xl:auto;--grid-row-xs:auto;--grid-row-sm:auto;--grid-row-md:auto;--grid-row-lg:auto;--grid-row-xl:auto;--grid-order-xs:0;--grid-order-sm:0;--grid-order-md:0;--grid-order-lg:0;--grid-order-xl:0;--grid-horizontal-alignment-xs:normal;--grid-horizontal-alignment-sm:normal;--grid-horizontal-alignment-md:normal;--grid-horizontal-alignment-lg:normal;--grid-horizontal-alignment-xl:normal;--grid-vertical-alignment-xs:normal;--grid-vertical-alignment-sm:normal;--grid-vertical-alignment-md:normal;--grid-vertical-alignment-lg:normal;--grid-vertical-alignment-xl:normal;--grid-direction-xs:column;--grid-direction-sm:column;--grid-direction-md:column;--grid-direction-lg:column;--grid-direction-xl:column;grid-column:span var(--grid-column-xs);grid-row:span var(--grid-row-xs);order:var(--grid-order-xs);align-items:var(--grid-horizontal-alignment-xs);justify-content:var(--grid-vertical-alignment-xs);flex-direction:var(--grid-direction-xs)}@media (min-width: 576px){:host>::slotted(ui-grid-item){grid-column:span var(--grid-column-sm);grid-row:span var(--grid-row-sm);order:var(--grid-order-sm);align-items:var(--grid-horizontal-alignment-sm);justify-content:var(--grid-vertical-alignment-sm);flex-direction:var(--grid-direction-sm)}}@media (min-width: 768px){:host>::slotted(ui-grid-item){grid-column:span var(--grid-column-md);grid-row:span var(--grid-row-md);order:var(--grid-order-md);align-items:var(--grid-horizontal-alignment-md);justify-content:var(--grid-vertical-alignment-md);flex-direction:var(--grid-direction-md)}}@media (min-width: 992px){:host>::slotted(ui-grid-item){grid-column:span var(--grid-column-lg);grid-row:span var(--grid-row-lg);order:var(--grid-order-lg);align-items:var(--grid-horizontal-alignment-lg);justify-content:var(--grid-vertical-alignment-lg);flex-direction:var(--grid-direction-lg)}}@media (min-width: 1200px){:host>::slotted(ui-grid-item){grid-column:span var(--grid-column-xl);grid-row:span var(--grid-row-xl);order:var(--grid-order-xl);align-items:var(--grid-horizontal-alignment-xl);justify-content:var(--grid-vertical-alignment-xl);flex-direction:var(--grid-direction-xl)}}\";\n\nconst UiGrid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inline = false;\n    this.dense = false;\n    this.gap = '0';\n    this.columns = 1;\n  }\n  render() {\n    return (h(Host, { style: Object.assign(Object.assign(Object.assign(Object.assign({}, mapKeys(mapValues(getValuePerBreakpointAndFillGaps(this.columns, 1), v => isFixed(v) ? `repeat(${v}, minmax(0, 1fr))` : v), key => withBreakpointSuffix('--grid-template-columns', key))), mapKeys(getValuePerBreakpointAndFillGaps(this.gap, '0'), key => withBreakpointSuffix('--grid-gap', key))), mapKeys(mapValues(getValuePerBreakpointAndFillGaps(this.dense, false), v => v ? 'dense' : 'row'), key => withBreakpointSuffix('--grid-dense', key))), mapKeys(mapValues(getValuePerBreakpointAndFillGaps(this.inline, false), v => v ? 'inline-grid' : 'grid'), key => withBreakpointSuffix('--grid-inline', key))) }, h(\"slot\", null)));\n  }\n};\nUiGrid.style = uiGridCss;\n\nexport { UiGrid as ui_grid };\n","/**\n * Gets the value for the given {@link Breakpoint}.\n *\n * @param breakpoint the {@link Breakpoint} to get the value for\n * @param value the {@link BreakpointAwareValue}\n */\nconst getBreakpointAwareValue = (breakpoint, value) => {\n  var _a;\n  if (value === null) {\n    return null;\n  }\n  else if (!(value instanceof Object)) {\n    return breakpoint === 'xs' ? value : null;\n  }\n  else {\n    return (_a = value[breakpoint]) !== null && _a !== void 0 ? _a : null;\n  }\n};\n/**\n * Returns a map with each {@link Breakpoint} as key pointing to the {@link Breakpoint}'s value.\n *\n * @param value the {@link BreakpointAwareValue}\n */\nconst getValuePerBreakpoint = (value) => {\n  return {\n    xs: getBreakpointAwareValue('xs', value),\n    sm: getBreakpointAwareValue('sm', value),\n    md: getBreakpointAwareValue('md', value),\n    lg: getBreakpointAwareValue('lg', value),\n    xl: getBreakpointAwareValue('xl', value)\n  };\n};\n/**\n * Returns a map with each {@link Breakpoint} as key pointing to the {@link Breakpoint}'s value or if that value was null to the previous {@link Breakpoint}'s value.\n * If all {@link Breakpoint} values are null the fallback is used.\n *\n * @param value the {@link BreakpointAwareValue}\n * @param fallback the fallback value\n */\nconst getValuePerBreakpointAndFillGaps = (value, fallback) => {\n  var _a, _b, _c, _d, _e;\n  const _valueByBreakpoint = getValuePerBreakpoint(value);\n  let prevValue = fallback;\n  return {\n    xs: prevValue = (_a = getBreakpointAwareValue('xs', _valueByBreakpoint)) !== null && _a !== void 0 ? _a : prevValue,\n    sm: prevValue = (_b = getBreakpointAwareValue('sm', _valueByBreakpoint)) !== null && _b !== void 0 ? _b : prevValue,\n    md: prevValue = (_c = getBreakpointAwareValue('md', _valueByBreakpoint)) !== null && _c !== void 0 ? _c : prevValue,\n    lg: prevValue = (_d = getBreakpointAwareValue('lg', _valueByBreakpoint)) !== null && _d !== void 0 ? _d : prevValue,\n    xl: (_e = getBreakpointAwareValue('xl', _valueByBreakpoint)) !== null && _e !== void 0 ? _e : prevValue\n  };\n};\n/**\n * Returns the given name with the {@link Breakpoint}'s as suffix.\n *\n * @param name the name to suffix\n * @param breakpoint the {@link Breakpoint}\n */\nconst withBreakpointSuffix = (name, breakpoint) => {\n  return `${name}-${breakpoint}`;\n};\n\nconst classes = (...classNames) => {\n  return classNames.filter(className => !!className).join(' ');\n};\nconst isFixed = (o) => {\n  const s = String(o);\n  return !isNaN(+s) && isFinite(+s) && (typeof o === 'number' || !/e/i.test(s));\n};\nconst mapKeys = (obj, mapper = a => a) => {\n  return Object.entries(obj)\n    .reduce((values, [key, value]) => (Object.assign(Object.assign({}, values), { [mapper(key)]: value })), {});\n};\nconst mapValues = (obj, mapper = a => a) => {\n  return Object.entries(obj)\n    .reduce((values, [key, value]) => (Object.assign(Object.assign({}, values), { [key]: mapper(value) })), {});\n};\n\nexport { mapValues as a, classes as c, getValuePerBreakpointAndFillGaps as g, isFixed as i, mapKeys as m, withBreakpointSuffix as w };\n"],"sourceRoot":""}